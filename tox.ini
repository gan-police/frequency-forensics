# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    # always keep coverage-clean first
    # coverage-clean
    # code linters/stylers
    manifest
    pyroma
    flake8
    mypy
    # documentation linters/checkers
    doc8
    docstr-coverage
    docs
    # the actual tests
    py
    # always keep coverage-report last
    # coverage-report

[testenv]
commands = coverage run -p -m pytest --durations=20 {posargs:tests}
deps =
    coverage
    pytest

[pytest]
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:manifest]
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:black]
skip_install = true
deps =
    black
commands =
    black src/freqdect/ scripts/ tests/ setup.py
description = Apply Black to python source code.

[testenv:flake8]
skip_install = true
deps =
    flake8
    flake8-bandit
    flake8-colors
    flake8-black
    flake8-docstrings
    flake8-import-order
    flake8-bugbear
    flake8-broken-line
    pep8-naming
    pydocstyle
    darglint
commands =
    flake8 src/freqdect/ tests/ setup.py
description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming).

[testenv:pyroma]
deps =
    pygments
    pyroma
skip_install = true
commands = pyroma --min=10 .
description = Run the pyroma tool to check the package friendliness of the project.

[testenv:mypy]
deps = mypy
commands = mypy --ignore-missing-imports src/freqdect/
description = Run the mypy tool to check static typing on the project.

[testenv:doc8]
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/
description = Run the doc8 tool to check the style of the RST files in the project docs.

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage src/freqdect/ tests/ setup.py --skip-private --skip-magic
description = Run the docstr-coverage tool to check documentation coverage

[testenv:docs]
changedir = docs
extras =
    docs
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    sphinx-build -W -b html -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt
whitelist_externals =
    /bin/cp
    /bin/cat
    /bin/mkdir

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report

####################
# Deployment tools #
####################

[testenv:bumpversion]
commands = bumpversion {posargs}
skip_install = true
passenv = HOME
deps =
    bumpversion

[testenv:build]
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

[testenv:release]
skip_install = true
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*

[testenv:finish]
skip_install = true
passenv = HOME
deps =
    {[testenv:build]deps}
    {[testenv:release]deps}
    bumpversion
commands =
    bumpversion release
    {[testenv:release]commands}
    git push
    bumpversion patch
    git push
whitelist_externals =
    /usr/bin/git
